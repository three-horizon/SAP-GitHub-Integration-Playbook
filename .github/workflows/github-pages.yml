# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Create Gemfile if it doesn't exist
        run: |
          if [ ! -f Gemfile ]; then
            echo "source 'https://rubygems.org'" > Gemfile
            echo "gem 'github-pages', group: :jekyll_plugins" >> Gemfile
            echo "gem 'webrick'" >> Gemfile
          fi
      - name: Install dependencies
        run: bundle install
      - name: Debug directory structure
        run: |
          echo "Listing top-level directories:"
          find . -maxdepth 1 -type d | sort
          
          echo "Listing _includes directory:"
          find ./_includes -type f 2>/dev/null || echo "_includes directory not found"
          
          echo "Listing _layouts directory:"
          find ./_layouts -type f 2>/dev/null || echo "_layouts directory not found"
          
          echo "Listing assets/css directory:"
          find ./assets/css -type f 2>/dev/null || echo "assets/css directory not found"
          
          echo "Listing assets/js directory:"
          find ./assets/js -type f 2>/dev/null || echo "assets/js directory not found"
          
          echo "Listing assets/images directory:"
          find ./assets/images -type d | sort || echo "No image directories found"
          
          echo "Listing image files:"
          find ./assets/images -type f | grep -E '\.(jpg|jpeg|png|gif|svg)$' || echo "No image files found"
      - name: Create directory structure if needed
        run: |
          mkdir -p ./_includes
          mkdir -p ./_layouts
          mkdir -p ./assets/css
          mkdir -p ./assets/js
          mkdir -p ./assets/images/architecture
      - name: Copy images to Jekyll structure
        run: |
          if [ -d "assets/images" ]; then
            cp -R assets/images/* ./assets/images/
            echo "Copied images to ./assets/images"
          else
            echo "No images found in assets/images"
          fi
      - name: Create image helper include
        run: |
          cat > ./_includes/image.html << 'EOL'
          <figure>
            <img src="{{ site.baseurl }}{{ include.url }}" alt="{{ include.alt }}" {% if include.width %}width="{{ include.width }}"{% endif %} {% if include.height %}height="{{ include.height }}"{% endif %}>
            {% if include.caption %}<figcaption>{{ include.caption }}</figcaption>{% endif %}
          </figure>
          EOL
      - name: Build with Jekyll
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 